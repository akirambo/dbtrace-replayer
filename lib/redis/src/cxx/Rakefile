#
# Copyright (c) 2017, Carnegie Mellon University.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT
# HOLDERS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
# WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#

desc "Get hiredis library"
task :init do
  aptget = `which apt-get`
  yum    = `which yum`
  if(aptget.size > 0)then
    ## Ubuntu
    sh "sudo -E apt-get install -y libevent-dev"
  elsif(yum.size > 0)then
    ## Centos
    sh "sudo -E yum -y install libevent"
  end
  sh "git clone https://github.com/redis/hiredis.git"
  sh "cd hiredis;make; sudo -E make install"
end

desc "Build Redis Runner (CXX)"
task :build => [:clean] do
  sh "ruby extconf.rb"
  sh "make"
end

desc "Simple Test"
task :test => [:build] do
  sh "cd test; make ; ./testrun"
  sh "ruby test/test.rb"
end

task :clean do
  if(File.exist?("Makefile"))then
    sh "make clean"
  end
  sh "cd test; make clean"
end

task :distclean => [:clean] do
  sh "rm -rf hiredis Makefile"
end
